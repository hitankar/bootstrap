@use "mixins/lists";
@use "variables";
@use "vendor/rfs";

//
// Headings
//
.h1 {
  @extend h1;
}

.h2 {
  @extend h2;
}

.h3 {
  @extend h3;
}

.h4 {
  @extend h4;
}

.h5 {
  @extend h5;
}

.h6 {
  @extend h6;
}


.lead {
  @include rfs.font-size(variables.$lead-font-size);
  font-weight: variables.$lead-font-weight;
}

// Type display classes
.display-1 {
  @include rfs.font-size(variables.$display1-size);
  font-weight: variables.$display1-weight;
  line-height: variables.$display-line-height;
}
.display-2 {
  @include rfs.font-size(variables.$display2-size);
  font-weight: variables.$display2-weight;
  line-height: variables.$display-line-height;
}
.display-3 {
  @include rfs.font-size(variables.$display3-size);
  font-weight: variables.$display3-weight;
  line-height: variables.$display-line-height;
}
.display-4 {
  @include rfs.font-size(variables.$display4-size);
  font-weight: variables.$display4-weight;
  line-height: variables.$display-line-height;
}

//
// Emphasis
//
.small {
  @extend small;
}

.mark {
  @extend mark;
}

//
// Lists
//

.list-unstyled {
  @include lists.list-unstyled();
}

// Inline turns list items into inline-block
.list-inline {
  @include lists.list-unstyled();
}
.list-inline-item {
  display: inline-block;

  &:not(:last-child) {
    margin-right: variables.$list-inline-padding;
  }
}


//
// Misc
//

// Builds on `abbr`
.initialism {
  @include rfs.font-size(variables.$initialism-font-size);
  text-transform: uppercase;
}

// Blockquotes
.blockquote {
  margin-bottom: variables.$spacer;
  @include rfs.font-size(variables.$blockquote-font-size);
}

.blockquote-footer {
  display: block;
  @include rfs.font-size(variables.$blockquote-small-font-size);
  color: variables.$blockquote-small-color;

  &::before {
    content: "\2014\00A0"; // em dash, nbsp
  }
}
